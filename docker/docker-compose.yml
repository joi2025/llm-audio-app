services:
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    image: llm-audio-app/backend:dev
    env_file:
      - ./env.dev
    environment:
      - PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    expose:
      - "8000"
    networks:
      - app
    volumes:
      - backend_data:/app/backend/data
    depends_on:
      - prometheus
    secrets:
      - openai_api_key
      - flask_secret_key
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
      args:
        VITE_BACKEND_URL: ${VITE_BACKEND_URL-http://localhost:8080}
    image: llm-audio-app/frontend:dev
    env_file:
      - ./env.dev
    depends_on:
      - backend
    networks:
      - app
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  proxy:
    image: nginx:1.27-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:v2.53.0
    command: ["--config.file=/etc/prometheus/prometheus.yml", "--storage.tsdb.retention.time=15d"]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - app
    ports:
      - "9090:9090"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app
    ports:
      - "8081:8080"

networks:
  app:
    driver: bridge

volumes:
  backend_data: {}
  prometheus_data: {}

secrets:
  openai_api_key:
    file: ./secrets/openai_api_key
  flask_secret_key:
    file: ./secrets/flask_secret_key
