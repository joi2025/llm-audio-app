version: "3.8"

services:
  backend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/llm-audio-app-backend:${IMAGE_TAG:-latest}
    env_file:
      - ./env.prod
    environment:
      - PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - app
    volumes:
      - backend_data:/app/backend/app/data
    secrets:
      - openai_api_key
      - flask_secret_key
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 128M

  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/llm-audio-app-frontend:${IMAGE_TAG:-latest}
    env_file:
      - ./env.prod
    networks:
      - app
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  proxy:
    image: nginx:1.27-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    environment:
      - NGINX_BACKEND_UPSTREAM=backend:8000
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - app
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  prometheus:
    image: prom/prometheus:v2.53.0
    command: ["--config.file=/etc/prometheus/prometheus.yml", "--storage.tsdb.retention.time=30d"]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - app

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app

networks:
  app:
    driver: overlay

volumes:
  backend_data: {}
  prometheus_data: {}

secrets:
  openai_api_key:
    external: true
  flask_secret_key:
    external: true
