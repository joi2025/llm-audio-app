name: CD

on:
  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ${{ github.repository_owner }}/llm-audio-app-backend
  IMAGE_FRONTEND: ${{ github.repository_owner }}/llm-audio-app-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Extract version
        id: vars
        run: echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push backend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.backend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}:${{ steps.vars.outputs.TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}:latest

      - name: Build & push frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.frontend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}:${{ steps.vars.outputs.TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' }}
    steps:
      - name: Deploy placeholder
        run: |
          echo "Add your deployment step here (SSH to server, docker compose pull & up -d)."
          echo "Images pushed: $REGISTRY/$IMAGE_BACKEND and $REGISTRY/$IMAGE_FRONTEND with tag ${{ needs.build-and-push.outputs.TAG }}"
